version: "3.8"
services:
  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: nginx
    ports:
      - published: 9999
        target: 80
        protocol: tcp
    depends_on:
      - go1
      - go2
    networks:
      - cstm-bridge
  go1:
    container_name: go1
    env_file:
      - user.env
    build:
      context: "."
    image: fakultet_go:v2
    #deploy:
    #  replicas: 3
    #  placement:
    #    constraints:
    #      - "node.role==worker"
    #  restart_policy:
    #    condition: on-failure
    #    delay: 5s
    #    max_attempts: 3
    #  rollback_config:
    #    order: start-first
    #    failure_action: pause
    #  update_config:
    #    order: start-first
    #    delay: 5s
    #    failure_action: rollback
    ports:
      - published: 8080
        target: 8080
        protocol: tcp
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/hz"]
      start_period: 15s
      timeout: 10s
      interval: 50s
      retries: 3
#    volumes:
 #     - type: volume
  #      target: /home/ivan/project
   #     source: project
    depends_on:
      - mysql1
    networks:
      #- cstm-overlay
       - cstm-bridge

  go2:
      container_name: go2
      env_file:
        - user2.env
      build:
        context: "."
      image: fakultet_go:v2
      #deploy:
      #  replicas: 3
      #  placement:
      #    constraints:
      #      - "node.role==worker"
      #  restart_policy:
      #    condition: on-failure
      #    delay: 5s
      #    max_attempts: 3
      #  rollback_config:
      #    order: start-first
      #    failure_action: pause
      #  update_config:
      #    order: start-first
      #    delay: 5s
      #    failure_action: rollback
      ports:
        - published: 8081
          target: 8080
          protocol: tcp
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8081/hz"]
        start_period: 15s
        timeout: 10s
        interval: 50s
        retries: 3
  #    volumes:
  #     - type: volume
    #      target: /home/ivan/project
    #     source: project
      depends_on:
        - mysql2
      networks:
        #- cstm-overlay
        - cstm-bridge

  mysql1:
    container_name: mysql1
    env_file:
      - config.env
    image: mysql:5.7
    #deploy:
    #  placement:
    #    constraints:
    #      - "node.role==manager"
    #  restart_policy:
    #    condition: on-failure
    #    delay: 5s
    #    max_attempts: 3
    #  rollback_config:
    #    order: start-first
    #    failure_action: pause
    #  update_config:
    #    order: start-first
    #    delay: 5s
    #    failure_action: rollback
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - published: 3308
        target: 3306
        protocol: tcp
    volumes:
      - db_data1:/var/lib/mysql
    networks:
      #- cstm-overlay
       - cstm-bridge

  mysql2:
    container_name: mysql2
    env_file:
      - config.env
    image: mysql:5.7
    #deploy:
    #  placement:
    #    constraints:
    #      - "node.role==manager"
    #  restart_policy:
    #    condition: on-failure
    #    delay: 5s
    #    max_attempts: 3
    #  rollback_config:
    #    order: start-first
    #    failure_action: pause
    #  update_config:
    #    order: start-first
    #    delay: 5s
    #    failure_action: rollback
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - published: 3309
        target: 3306
        protocol: tcp
    volumes:
      - db_data2:/var/lib/mysql
    networks:
      #- cstm-overlay
       - cstm-bridge
volumes:
  project:
  db_data1:
  db_data2:

networks:
  cstm-overlay:
    driver: overlay
  cstm-bridge:
    driver: bridge
